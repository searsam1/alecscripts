<h2>
    Sorting an Array
</h2>

<p>
    Use the <code class="lang-js">.sort()</code> method on arrays to sort them
    alphabetically.
</p>

<pre><code class="lang-js">const fruits = ["Pear", "Apple", "Pineapple", "Watermelon"];
fruits.sort();

// ["Apple", "Pear", "Pineapple", "Watermelon"] 
</code></pre>

<h3>
    Reverse Sort
</h3>

<p>
    Use <code class="lang-js">.reverse()</code> to reverse sort an
    array.
</p>

<pre><code class="lang-js">const fruits = ["Pear", "Apple", "Pineapple", "Watermelon"];
fruits.sort();
fruits.reverse();

// ["Watermelon", "Pineapple", "Pear", "Apple"]
</code></pre>

<h2>Numeric Sort</h2>
<p>
    Numbers cannot be sorted as strings properly. To sort an
    array of number types, use a <b>compare</b> function.
    A compare function takes in two arguments and returns
    a <b>negative</b> or <b>positive</b> value, or <b>zero</b>.
</p>


<pre><code class="lang-js">const points = [40, 100, 1, 5, 25, 10];
points.sort(function(a, b){return a - b});

// [1, 5, 10, 25, 40, 100]
</code></pre>

<ul>
    <li><code> a - b</code> will return the array sorted from smallest to biggest. </li>
    <li><code> b - a</code> will return the array sorted from biggest to smallest. </li>
</ul>

<pre><code class="lang-js">const points = [40, 100, 1, 5, 25, 10];
points.sort(function(a, b){return b - a});

// [100, 40, 25, 10, 5, 1]
</code></pre>

<h2>Sorting Object Arrays</h2>

<p>
    To sort an array that holds objects, use a compare function like the one
    used in a numeric sort. Use the objects attributes inside the compare function
    to determine the sort.
</p>

<pre><code class="lang-js">const cars = [
  {type:"Ferrari", year:2019},
  {type:"Audi", year:2020},
  {type:"Benz", year:2011}
];

cars.sort(function(a, b){return a.year - b.year});

// [
// {type: "Benz", year: 2011}, 
// {type: "Ferrari", year: 2019}, 
// {type: "Audi", year: 2020}
// ]
</code></pre>

<p>
    The code above sort the car array based on the year of each car. It is
    the same thing as <code>a - b</code>, so it does an ascending (smallest to biggest) sort.
    The <code>type</code> of the car (maker) can also be used to sort the array (while being 
    a little more complex):
</p>

<pre><code class="lang-js">cars.sort(function(a, b){
  let x = a.type.toLowerCase();
  let y = b.type.toLowerCase();
  if (x < y) 
    {return -1;}
  if (x > y) 
    {return 1;}
  return 0;
});

// [{type: "Audi", year: 2020}, 
// {type: "Benz", year: 2011}, 
// {type: "Ferrari", year: 2019}]
</code></pre>

Learn More <a class="link-success" href="https://www.w3schools.com/js/js_array_sort.asp">@@w3schools</a>