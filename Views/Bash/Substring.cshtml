<section>
    <p>Being able to check if a string is in another string 
        is a common task for a programmer. There are a couple 
        nice ways of doing this in <i>bash</i>.
    </p>
    <h2>
        Grep
    </h2>
    <p>
        Grep is used to check if a substring is in a given string. Pipe 
        the "main" string into the <code>grep</code> command, followed <code>-q</code> and  
        the substring to check for.
    </p>
    <pre><code class="lang-bash">
mainstring='Sour Edsel'
if echo "$mainstring" | grep -q "Edsel"; 
    then
        echo "Edsel is Sour"
fi
# Edsel is Sour
    </code></pre>
</section>

<section>
    <h2>
        re
    </h2>
    <p>
        There is a way to use a regular expression (re) to find if a 
        given substring is in a string. Use the <code>~= </code> operator inside 
        double square brackets, followed by the substring to check. 
    </p>
    <pre><code class="lang-bash">
mainstring='Hello Mars'
if [[ $mainstring =~ "Mars" ]]; 
    then
        echo "We are at Mars"
fi
# We are at Mars
    </code></pre>
</section>

<section>
    <h2>
        comparison operator
    </h2>
    <p>
        The comparison operator <code>==</code> can be combined with the wildcard 
        operator <code>**</code> to check if a substring is in a string. 
        Wrap the wild card operator around the substring, <code>*"like so"*</code>
    </p>
    <pre><code class="lang-bash">
mainstring='Welcome to Saturn'
if [[ $mainstring == *"Saturn"* ]]; then
  echo "Hi Saturn"
fi        
# Hi Saturn
    </code></pre>
</section>