<h2>
    Basic Input
</h2>
<p>
    User input is collected with the <code>scanner</code> class from the <code>java.util</code> package.    
    To use the scanner class, create a scanner object and use <code>nextLine()</code> to collect user-inputted 
    strings. 
</p>

<pre><code class="lang-java">import java.util.Scanner;  // nextLine, close 

class Main {
  public static void main(String[] args) {
    // Create a Scanner object
    Scanner scannerObj = new Scanner(System.in);  
    System.out.println("Enter username");

    // Read user input using .nextLine()
    String userName = scannerObj.nextLine();  
    // close for resource leak
    scannerObj.close();
    System.out.println("Username is: " + userName);
    // Enter username
    // example name
    // Username is: example name
  }
}</code></pre>

<h2>
    Collecting Different Types 
</h2>

<p>
    The <b>scanner</b> class comes with <code>next&lt;type&gt;</code> methods 
    for collecting booleans, ints, etc..
</p>

@{
    string[] collection = @"nextBoolean()	 boolean  
nextByte()	 byte  
nextDouble()	 double  
nextFloat()	 float  
nextInt()	 int  
nextLine()	 String  
nextLong()	 long  
nextShort()	 short  ".Split("\n");
}

<table>
    <tr>
        <th>
            Method
        </th>
        <th>
            Value Type
        </th>
    </tr>
    @foreach (var item in collection)
    {
        <tr>
            <td>
                <code class="lang-java">@item.Split("\t")[0]</code>
            </td>
            <td>
                <b>@item.Split("\t")[1]</b>
            </td>
        </tr>
    }
</table>

<p>
    Below is an example on how to get ints, floats and bytes. 
</p>

<pre><code class="lang-java">import java.util.Scanner;  // nextLine, close 

class Main {
  public static void main(String[] args) {
    // Create a Scanner object
    Scanner scannerObj = new Scanner(System.in);  
    
    System.out.println("$Enter a whole number: ");
    // Read int from .nextInt()
    int userInt = scannerObj.nextInt();  

    System.out.println("$~ Enter a fractional number: ");
    // Read float from .nextFloat()
    float userFloat = scannerObj.nextFloat();  

    System.out.println("$~ Enter a byte: ");
    // Read Byte from .nextByte()
    byte userByte = scannerObj.nextByte();  
    
    // close for resource leak
    scannerObj.close();
    System.out.println("$~ int is: " + userInt);
    System.out.println("$~ float is: " + userFloat);
    System.out.println("$~ byte is: " + userByte);

    // $~ Enter a whole number: 
    // 1
    // $~ Enter a fractional number: 
    // 2
    // $~ Enter a byte: 
    // 3
    // $~ int is: 1
    // $~ float is: 2.0
    // $~ byte is: 3
    
  }
}</code></pre>