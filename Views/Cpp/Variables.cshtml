

@* Types of Variables *@
<section>
    <h1>
        Types of Variables
    </h1>
    <p>
        Variables come with different types like numbers or strings that 
        behave differently by default. 
    </p>
    <ul>
        <li>
            int 
        </li>
            <ul><li>Integer <code>(1, 2, 3)</code></li></ul>
        <li>
            double
        </li>
            <ul><li>Float <code>(2.71828)</code></li></ul>
        <li>
            char 
        </li>
            <ul><li>Character <code>('a', 'b', 'c')</code></li></ul>
        <li>
            string 
        </li>   
            <ul><li>A collection of characters <code>("Hello World!")</code></li></ul>
        <li>
            bool
        </li>
            <ul>
                <li>True or False (<code>true false</code>)</li>
                <li>(<code>true false</code>) is lowercase in <i>C++</i></li>    
            </ul>
    </ul>
</section>

@* Declaration *@
<section>
    <h1>
        Declaration
    </h1>
    <p>
        Variables are declared with a type and a value. 
        The value is optional, and a buffer of that type's 
        size will take its place. Note that if a variable already 
        has a variable and is reassigned, its value can change, 
        but not its type. 
    </p>
    <pre><code class="lang-cpp">#include &lt;iostream&gt;
    int main() {
        int x = 1889; // Declare x variable
        std::cout << x << "\n";    
        return 0;
    }
    // Outputs 1889</code></pre>

</section>

@* Display Variables *@
<section>
    <h1>
        Display Variables
    </h1>
    <p>
        Variables like <code>ints</code> and <code>strings</code> are
        printed out using the <code>std::cout << var</code> function. Variables 
        that hold a container like an <code>array</code> how to be printed over a 
        loop (to print each element). 
    </p>
    <pre><code class="lang-cpp">#include &lt;iostream&gt;
    int main(){
        int var = 22;
        std::cout << var << "\n";
        return 0;
    }        
    // output:
    // 22
    </code></pre>
</section>

@* Other Examples with Different Types *@
<section>
    <h1>
        Other Examples 
    </h1>
    <p>
        Declaring other variable types:
    </p>
    <pre><code class="lang-cpp">#include &lt;iostream&gt;
    int main(){
        std::string str = "This is a string";
        double decimalNumber = 1.99;
        bool trueOrFalse = true; // or 1
        char chr = 'A';
    }</code></pre>
</section>

@* Other Examples with Different Types *@
<section>
    <h1>
        Operations 
    </h1>
    <p>
        Variables have operations like adding and subtracting. Instead of 
        adding two integers together, add the two variables that contain those 
        two integers. 
    </p>
    <pre><code class="lang-cpp">#include &lt;iostream&gt;
    int main(){
        int x = 2; 
        int y = 2;
        int res = x + y;  
        std::cout << res << "\n"; 
        // Output: 4 
        return 0; 
    }</code></pre>
</section>

