
<center><img class="rounded-3" width=75% src="/lib/Resources/code-gba995428b_1280.png" /><figcaption>Image by <a href="https://pixabay.com/users/skorec-16694100/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129">Daniel Skovran</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129">Pixabay</a></figcaption></center>

<br><br>
<p>
    Git first came about in 2005 and wanted to be quick, simple and have a strong support. 
    All these years later, git is easy to use and still supports those qualities. 
</p>

<center class="pb-5">
    <img src="~/lib/Resources/Git-Logo-1788C.svg">
</center>

<h2 class="display-6">
    What is Git?üïπÔ∏è
</h2>

<style>
    iframe{
        border-radius: 10px;
        box-shadow: 1px 1px 2px 1px rgb(1,1,1,.1);
    }
</style>

<center>
    <iframe 
    width="400" 
    height="400" 
    src="https://www.youtube.com/embed/4XpnKHJAok8" 
    title="Tech Talk: Linus Torvalds on git" 
    frameborder="0" 
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
    allowfullscreen>
</iframe>
<figcaption>https://www.youtube.com/embed/4XpnKHJAok8</figcaption>

</center>

<p>
    Video games are fun because they have save points. Git, in a similar way, 
    is how programmers save their progress. One of the bread and butter features 
    git has to offer is branches: a way of running tests and experiments 
    on websites and applications while having a save point to go back to, called 
    the main (or master) branch. 
</p>
<p>
    In essence, git is a Version Control System (VCS) that acts 
    much differently than other VCSs. The main difference: git doesn't 
    use file differences, it uses snapshots. Snapshots are save points that 
    git points to. Git is more of a filesystem than anything.   
</p>

<h2 class="display-6">
    GitHub
</h2>
<p>
    Github is a popular website for hosting repositories: different 
    projects that have Git version control (save points). GitHub 
    can be linked with a local terminal and make it easy to push 
    changes to a project. This project can then be viewed by others 
    and added on to/changed. <a href="https://github.com/searsam1">My GitHub</a>. 
</p>


<h2>
    Installing Git üî®
</h2>
<p>
    Git is easy to install on any modern OS through a package manager. 
</p>
<h3>
    Install Git on Linux
</h3>
<p>
    For RPM-based distros like <b>Fedora</b>, <b>RHEL</b>, or <b>CentOS</b>, use <code>dnf</code>: 
</p>
<pre><code class="lang-shell">sudo dnf install git-all</code></pre>
<p>
    For debian distros, like Ubuntu, try <code class="lang-shell">apt</code>: 
</p>
<pre><code class="lang-shell">sudo apt install git-all</code></pre>
<p>
    Find more info <a href="https://git-scm.com/download/linux">here</a>
</p>

<h3>
    Install Git on macOS
</h3>
<p>
    For Version Maverick and above, git comes with the Xcode tools. 
    Installing is done by typing git for the first time, and a prompt will display. 
</p>
<pre><code class="lang-shell">git --version</code></pre>

<h3>
    Install Git on Windows
</h3>
<p>
    Windows comes with an official build that can be downloaded at <a href="https://git-scm.com/download/win"> https://git-scm.com/download/win</a>
    For an auto install, use the Chocolatey package. 
</p>





<h2>
    Other Resources
</h2>
<ul>
    <li>
        ProGit book on git-scm: <a href="https://git-scm.com/book/en/v2">git-scm.com/book</a>
    </li>
</ul>

