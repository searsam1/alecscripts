@{
    ViewData["Title"] = "Python - Making Passwords";
}

<div class="text-center my-5">
    <h3 class="display-4 rounded-3">@ViewData["Title"]</h3>
</div>

<div class="text-left pt-3" >

    <h1 class="display-6">
        ASCII
    </h1>
    <div class="container mb-3">
        <p>
            ASCII is a set of numbers tied to 
            common characters in the english language. Computers
            work in base 2 with only ones and zeros, so 
            they cannot interpret letters like "a" or "b" or "c". So, one needs
            to turn those letters into numbers that can be converted to ones 
            and zeros. 

@* testing *@

@{
    string asciiLower = "abcdefghijklmnopqrstuvwxyz";
    string punc = "!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~";
    string asciiUpper ="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
}

<h4 class="text-left">
        Lowercase
</h4>
<div class="text-center" >
    
@foreach (char c in asciiLower)
{
    int i = c;
    string hexValue = i.ToString("X4");
    string binValue = Convert.ToString(i, 2);
    @* int hex = int.Parse(hexValue, System.Globalization.NumberStyles.HexNumber); *@
    <nav class="btn btn-outline-dark" onclick="alert('Character: \'  @c  \'\nASCII: <  @i  >\nHex: @hexValue\nBinary: @binValue')">
        ' @c ' : @i 
    </nav>
}

</div>
<br>

<h4 class="text-left">
        Uppercase
</h4>
<div class="text-center">
    @foreach (char c in asciiUpper)
{
    int i = c;
    string hexValue = i.ToString("X4");
    string binValue = Convert.ToString(i, 2);
    @* int hex = int.Parse(hexValue, System.Globalization.NumberStyles.HexNumber); *@
    <nav class="btn btn-outline-dark" onclick="alert('Character: \'  @c  \'\nASCII: <  @i  >\nHex: @hexValue\nBinary: @binValue')">
        ' @c ' : @i 
    </nav>
}
</div>
<br>
<h4 class="text-left">
        Punctuation
</h4>
<div class="text-center">
    @foreach (char c in punc)
{
    
    int i = c;
    string hexValue = i.ToString("X4");
    string binValue = Convert.ToString(i, 2);
    @* int hex = int.Parse(hexValue, System.Globalization.NumberStyles.HexNumber); *@
    <nav class="btn btn-outline-dark" onclick="alert('Character: \'  @c  \'\nASCII: <  @i  >\nHex: @hexValue\nBinary: @binValue')">
        ' @c ' : @i 
    </nav>
}
</div>
<br>
    <p>
       Python comes with some handy tools for converting between 
       characters and their ASCII codes. Use <code class="lang-py">ord</code> to
       get a characters ASCII code. Use <code class="lang-py">chr</code> to 
       get the character from an ASCII code.

       <pre><code class="lang-py">char = "a"
ord(char) # -> 97


n = 97
chr(n) # -> "a"</code></pre>
    </p>
        
    </div>


    <h1 class="display-6">
        string module
    </h1>
    <div class="container">
        <p>
            Passwords are easy to make using built-in tools
            with python, thanks to its powerful flexibilty 
            with strings and data types. The <code class="lang-py">string</code> module
            makes things a lot easier when making a lot of different password 
            programs, and it is a lot harder to keep track of all the ASCII characters without it.  
        </p>
        <p>
            <pre><code class="lang-py">import string

string.ascii_letters
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'

string.ascii_lowercase
'abcdefghijklmnopqrstuvwxyz'

string.punctuation
'!"#$%&\'()*+,-./:;<=>?&#64;[\\]^_`{|}~'</code></pre>
        </p>
        <p>
            The backslash <code class="lang-y">\</code> character has a special meaning 
            in python. Basically, it tells the string that there is going to be a special character 
            after it, like <code class="lang-py">"\n"</code>, which is a newline character.
            The <code class="lang-y">\</code> can escape itself it one needs a literal backslash: that is 
            why there are two in <code class="lang-py"> string.punctuation "[\\]" </code>. 
        </p>
        <p>
            While it does reduce the entropy of the password, it is best 
            practice to stay away from backslashes when making passwords.
        </p>
    </div>

</div>